os: linux
dist: trusty
language: node_js
services:
- docker
addons:
  sonarcloud:
    organization: ajc_bcgov
    token:
      secure: "HmkAfPpm05pDdAzLy+HskxwgcP+iC8XME2vXptpYIEMHkOQ0ihjC/Y1k97xgsD5UhSWKTG2i4V8ZoKawA7MGpjI/cHASvyafdEDq65rRjn6qN4rmsI98IUeFz7opfTSMQQBk0IxP3LfEjvFk/ZZqDg8y/jJOZC6r9v3dK+ifFlGEvgQQil+f/Ww8NAU7m/ILiGuuvtDHfQlDeHnfdPaAXURI0bY/kKG9JdhfCklcjoWbl2jEaDEZtPHzRHQ0UlgcsbMWfY4DTwdA4cbSIrczHFFfWZ/7XxbyuEE5XO4l7o1MMy0RSuUJLZWmByVleqdY8OjGv0FKzBVXPkj52446icAaNZuU+fG9VD6y2rQyID/tUL8IgxACl9dIXXgxXdtXt8SN85FmZ5yrWb6yr3Pxlq7EFbUi83qaemTNIf1ShxpqBCH1QLX2IW41wyar4z++z4BJbleKlPXOmwPwYXgMSgeHsZkkSkGgLMPmVotf/hGMeF90Yll0Z/JwNz3y1iGejCJiAop2e1ykPNVugOX3ZFPeowr01H2TYWM5mvuxHqZhaWihsT7x+FJHi27QCwGDOLXewYE2z8OziBoNaV8XTBW1CyJXiNOjDuGXl/FkqpPWztiTadJW2fWB0symjTNgRZcmwTT/uAluvyl7L0Q+lpzAuxKNET60bvx737xQu5c="
jobs:
    include:
    - name: Metadata Curator Bridge
      stage: APIs
      language: node_js
      node_js: lts/*
      cache: npm
      addons:
        apt:
          sources:
          - ubuntu-toolchain-r-test
          packages:
          - g++-4.8
      before_install:
        - |-
            cd /home/travis/build/bcgov/metadata-curator/backend
            npm ci
            if [ "$TRAVIS_TAG" = "" ]; then npm audit; fi
      before_script:
        - |-
            cd /home/travis/build/bcgov/metadata-curator/backend
            cp config/default.json.example config/default.json
        - |-
            wget -q ${SONAR_URL}${SONAR_APP}-cli-${SONAR_VERSION}.zip
            unzip ${SONAR_APP}-cli-${SONAR_VERSION}.zip
            PATH=`pwd`/${SONAR_APP}-${SONAR_VERSION}/bin:$PATH
      script:
        - |-
            cd /home/travis/build/bcgov/metadata-curator/backend
            npm test
        - |-
            cd /home/travis/build/bcgov/metadata-curator/backend
            bash docker_quayio_push metadata_curator_api
        - |-
            cd /home/travis/build/bcgov/metadata-curator
            sonar-scanner -Dsonar.login=$SONAR_TOKEN -Dproject.settings=sonar-project.properties -Dsonar.projectKey=mdc_backend -Dsonar.projectName="Metadata Curator - Backend" -Dsonar.modules=backend
      deploy:
            provider: script
            script:
              - |-
                cd backend; bash docker_push metadata_curator_api || travis_terminate 1
            on:
                all_branches: true
                condition: "$TRAVIS_BRANCH =~ ^master|develop$ || -n $TRAVIS_TAG"

    - name: Metadata Curator Frontend
      stage: Frontend
      language: node_js
      node_js: lts/*
      cache: npm
      addons:
        apt:
            sources:
            - ubuntu-toolchain-r-test
            packages:
            - g++-4.8
      before_install:
        - |-
            cd /home/travis/build/bcgov/metadata-curator/frontend
            npm ci
            # if [ "$TRAVIS_TAG" = "" ]; then npm audit; fi
      before_script:
        - |-
            cd /home/travis/build/bcgov/metadata-curator/frontend
      script:
        - |-
            cd /home/travis/build/bcgov/metadata-curator/frontend
            bash docker_quayio_push metadata_curator_ui
      before_deploy:
        - cd /home/travis/build/bcgov/metadata-curator/frontend
      deploy:
        provider: script
        script:
          - cd frontend; bash docker_push metadata_curator_ui || travis_terminate 1
        on:
            all_branches: true
            condition: "$TRAVIS_BRANCH =~ ^master|develop$ || -n $TRAVIS_TAG"

    - name: Integration Tests
      stage: Tests
      language: java
      addons:
        hosts:
        - auth.example.demo
        - mc.example.demo
      jdk: openjdk8
      cache:
        directories:
        - "/tmp/traviscache"
      before_install:
      - |-
        sudo -E apt-get -yq --no-install-suggests --no-install-recommends --allow-unauthenticated install dpkg google-chrome-stable
        if [ ! -d "/tmp/traviscache" ]; then
          mkdir -p /tmp/traviscache
        fi
      - |-
        cd /tmp
        sudo wget -q https://releases.hashicorp.com/terraform/${TERRAFORM_VERSION}/terraform_${TERRAFORM_VERSION}_linux_amd64.zip
      - |-
        cd /usr/local/bin
        sudo unzip -o /tmp/terraform_${TERRAFORM_VERSION}_linux_amd64.zip
        sudo rm -rf /tmp/terraform_${TERRAFORM_VERSION}_linux_amd64.zip
        sudo chmod +x terraform
      install:
      - |-
        cd /home/travis/build/bcgov/metadata-curator/terraform
        mkdir _tmp
        cp terraform.tfvars.example terraform.tfvars
        export DOCKER_REGISTRY_USER=$DOCKER_USERNAME
        export DOCKER_REGISTRY_PASS=$DOCKER_PASSWORD
        chmod 777 ./scripts/keycloak-setup.sh
      - terraform init
      - terraform apply -var hostRootPath=`pwd`/_tmp -auto-approve
      before_script:
      - |-
        if [ ! -d "/tmp/traviscache" ]; then
          mkdir -p /tmp/traviscache
        fi
      - |-
        if [ ! -f "/tmp/traviscache/Katalon_Studio_Linux_64-${KATALON_VERSION}.tar.gz" ]; then
          cd /tmp/traviscache
          sudo wget -q https://download.katalon.com/${KATALON_VERSION}/Katalon_Studio_Linux_64.tar.gz -O Katalon_Studio_Linux_64-${KATALON_VERSION}.tar.gz
        fi
      - |-
        cd /usr/local/bin
        sudo mkdir -p Katalon_Studio
        sudo tar -xf /tmp/traviscache/Katalon_Studio_Linux_64-${KATALON_VERSION}.tar.gz -C Katalon_Studio
        sudo chmod +x Katalon_Studio/katalon
        sudo chmod -R 777 Katalon_Studio
      - docker images --digests
      - docker ps
      script:
      - cd /usr/local/bin/Katalon_Studio
      - |-
        xvfb-run --auto-servernum --server-args='-screen 0, 1920x1280x24' ./katalon -noSplash -runMode=console -projectPath='/home/travis/build/bcgov/metadata-curator/ui_tests/Metadata Curator/Metadata Curator.proj' -retry=0 -testSuitePath='Test Suites/HappyPathSuite' -executionProfile='Travis' -browserType='Chrome (headless)'

env:
    global:
        - SONAR_APP=sonar-scanner
        - SONAR_URL=https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/
        - SONAR_VERSION=4.3.0.2102-linux
        - KATALON_VERSION=6.0.5
        - TERRAFORM_VERSION=0.13.6
        #docker
        - secure: "PDYlDhtyWWbVsb0Olbwy3UyQhR83osg9lSrqsNRLjwyJC5WeJX7+pkKxFo5UJOcuCxVXY1T1JxqM3TetgWveiOYfm+QBAAVt4NgLLgaL6bWHT9+vhNe61senkyuwbm1a+S2Ea+i5iea3U/3YMLmrWxQHuGPjSePJhPUYuCvob0ONbt83QQ2odcJsNSIPmYFNnM5tvWm/+jxNfTuA36bVoK0zR6RuEJpmhnkIqcXLrA2b7KWGoWAARt48NjevMK/WVv5jIx3kReQZhZYNj4dvq+zlbMPm3wZhv0zma/4rMbFmtDQOkN6t+Q1NL46gKhvouxZ0UrfTsBsOgYMtkqG84sOvde6vVz6w2hES9ScXJLry8TKW1wgXobt0diueWlpUeh4nXJqFDZjzVZJkRgbMR9+A33xR2P6DfIvwNrSDFq31LutCi7P7c/SXUtDTR+G2pnmcFNULZyGnaasjpbNKwyczRDhaffWts4rQ3cfiXvwdo15zCzOH0dTupZ1iOns4t4IYM7J5TozJ13PPYLqDivvMJ5zg20GqXpVd+KXHJ5cVOOc+ETdqraA+aNt42IQXH+oruRuZt4edg5M6S8RABIZTCgrI8mPjRdzqqMl3EmE+LzySWaluZmn1JoTndTwxieN4W7j0mZZ59gE8p0umYqxBToFe9CE5M2600Gt1DrM="
        - secure: "fMR8Z+bf70t5Uh7ISmJg0YDnO9JtHUY8WHNfMK7QyAQp+1myE42ttz7HT08xs4dkC93JP1hWUlTcSmhM6DACOM8VBvYkF88AgHZ3PR1/5dDxuAi1GsMCi/nUV8Xl6qyHqUzbbcyLudBx0VhWPcwqV2FFBiu7XYt3vio1/i0GziRuVcsHrxJ2NrMLZEVpjYFGwn7Ca7YyeKyt//EMml6B3yomPPsYq3KQmhHyaPJhJ2oz7jHrqItAxM5M9wRxEdtn8s6Fe+zXOtdBkJXQo13pA/rvPvSzLukm4uMu7cKvVbGLFowc51ZVXyrQRdrAnwhwsX/ZP/SmMx8cUJqh0eMNKc6AJpUZ8zNp6WMf/jFec7VrpvvVYIMsldr6Z+TabBRFbUPfUcnX/5M5Kysv2DekXbEvcnOwHS00gnq5tbMbbrgNfmKifSNeXCVKGfBHuhugVEYy+Vzv4ZnSft0NeLFAmy6yoq8EPLwk1sclbhS1czKJSXwl8X3gRuq+BfCCGgzTIs1hMDFpwetQD8yT/ZhQD2Ia/eB+Wb/rk4qVgjH8Cw+WKKH6qqXCyzRuyEV0ikDB3S9MlI91Xpr+DqRj9DKGklccri5yrSGer+pgBWJdyv4BYBwVuOK5Lt2X3NQkLQfl0aF1DmzSdYSxajgv4KdNmKIzU0phrU0U1OVTgVWoWBw="
        #quayio
        - secure: "c9tGVLSvw0Bat6brRAsKKNXoZNQ0kZUrc5vXU2opy7ZiYan2jFa9aPecddkDqbnfc/V+TKFBVbQx3AwINeDSLHlW+uzibLjcgXmnc/1dPdbRJhKAEjY3v7K+FAlwkIlp4Cc+Xv+oemjXbCaPaP3Jj1qLBsObVzmjMELEsjhTg1EM6Pz8MLrfdEw6WBQDPUEfx5vHpM9R/nPL9Qz53DaeK4JyCRDxshcpldsXSaMN0nNlFcgfyr4aJp38vm+9u3QEA2E7iY5PQaPW9tqHkn1Ex/Iw4+qkm25sgL17CvJOHCAMZZYPO62wip+gQiz0ipwEymF9oGDnlNjQaKdEnG0yzIP1gbTjQM4XDOPPCNRrD6QBmdJjC0abzQuq25aZUIlskat6QmfCeFv7FrrrpW9sGS+HkopUguqB+i+d/Oc8extAWFzK5+kY9o0K8ozUxQeUV+cSEACoPuF1u3/Xg7B38lLGUCsGIIFFNZqEvnEx3iyuaMT1LZR+iVN61yOawmUIt+OM4alsLTQImZPtgh97fyHB1FEo3mP2DCU8ea5wKB4H/LCHLRZX7bjFROOgtnbQ+Igmqm0T7dgSURzoVjlzYin10bItZuluyWkFEjg9+y3VubWEWVkZ7xXO3fJXgui12XOVIBZ+Jpl38dkzd0YZtZrlG0qbXU34uOebFR4qKPY="
        - secure: "i3etJ+rjQNxyscmh0Mq8K/X2j6pSHr+bjGYf4NXGNmBqytH35nHw8Kp0cJhAYNw/Q0I0/iiGl3e+fHt1GK1MoKWV80C7U4NCV6UyiyjBrX1TCF0P3EHiQVWdB2WfVDGyA5Hn3bbDPjVnDzz2HaLGtq2CyAx9VToGv/4B0lOybBNW5WYbb7HPMYH83AS5N+QSETxqHZjyQ2TA0FnMy+S4+KPaLkxgWRTyYGbt1DcI3fl8aEf3UUB0BeVMKHLQBRrVHDSmY+CZwDGlsBZABBdkhF6C6yv8wCAKXa/ArRInegKHevdMDuyk7EJe6GEPmFzkBMYFpu2qyF+BebLCIXsTqpyP48Qu6y8coqcl8Bxmnk7BKvN9c6mqzU8hGM/l+pwNs/i2kLTOWXisrfmdY6hwJhVkkVTJ4O4lwDaJs+h5FiCxMAzPz2KBCGj5kMIZ5y+MYeFhD2djW2rooZvwDZLg7ChckquBPQ2T6G9vlgeqDYd7fmuFlQsHEbuPliR/UmBQfrUlQIyHZBEYbiiIGgoXMelLtoVnWOicWHYNkTZABHE58PKw1Tm9KU9Tq4GaL3JzuyHptDgPeWebdmuJALUpOKCsZ/HHcTg7SywJvQxOCVbe2T4VMCnV8xW+UNU0iqa3lpIN6uTr/jmJYgrwUeHjNKfrOtXnvupEUSX6IwLAaBc="
        #deploy
        - secure: "aI/UQ6Ph61pzaFlhx+XgITbQDK7B3c7M8M2KhbYqRGL3Lv2PUNjv2ZmX5Kt90YJLztZNI4NWIOBdWxq6ROtASpy4KPBJIoUKm1QOMN05KqjC/Js4M9LZWqgWjdkuOGNeF0hMIFWiaMRvHAo/kx4VVgEmQZUurZlwNj1cLWjJkkuoePMuMK3OFsYJm7si588iRDBcTvctwtyR6byhjTBv17Ekj9+LqnDK7UWBc2zbvqZ4qSEPOvJKyG6Ef9uFNDrIJuR1HlNK9LJbYhBq1GK++7Aa3cEIGKBgSsbaJU4KNpwwEaHLjj/EEg+moOKxtSwq9GPylfKpFn9TIWZ3V6T1Xv/YQSnReBbCDa0vicvsNWxl0tE7h3pvLsAsjMe3Fs4EehBj9fLDqRWAwovjcYvApS9OmawRVc7RW0fZ4QjYi1FgyUqQZR1n51OOVP0jnEHeq5z24lXtt+mgQeSjlUUCdZLdxE1uFRN3x6AqNs3Z4M19DZoXzU6zg0LqB/LKzIL4p7IXPaBKsc7A9MplGj48N4P+vTWtUQ0pjnjPCq5T8u22MFiAyuvppkCBagxTjnkqo+T0QNS2c6RSmZu0aqUlS9J/6w1fPAIM4sgvHkdumfzUg7ADY07itmghrMEZJgDr2DQszsN5bUpHEmtK81Ver7BdUQgY+ihVb4GUxVRp3Yo="
        #sonar
        - secure: "g/jDaepYRl9mhp2Ph49vPH0MVJCMIOjhsi3Vw+Ir4uAAtXO6p3mtO6+yVxPACHuiOUbAORCnZFBv8DgZPu50kPgE6NmlA5k/sddqK8oOPuvdDah7W6PK8NHNLFssSoOVShWvW8nTL/X4N2/4iF/dbGKXW2WSNwY5I10vm2Qw+1EQ1FkngFzSfQP8H03qQB4qZ+idXEF9ctO9kG5N6q3lfw1FWAZKp88YGjapI5SXoBbwyJ0EzshZyU+vidH8IBT4Fy81LMEd5JKQ1kdxjz5264+Ui4FKuKN053+wiVrC69Ho2QY2Y1qNRfoMx47NKfFBcZNunpdBzjmQJn6RjR/boPTigHvGHmJ9+G0TauKmizlO3id29601lh1XXMhP/pkPTpnD687k2CQn/13PjTqucsmV+aPmjKZcIDbbz3GZsAD8iuzzzcGQzuI/7I1W/LaAV6XF8XlUWR+yXD5DLe2k4GP0/VY1Q6XAYACFrkr785gqEl1t2LdZc7Z4xqOJvopy9hDt7e7bmF6BMh2eYCFdsgXdIuj1W4fJdMNP5EgGIB9SAe3wkuamTgGn18KszkOaPsXYpYMi2fEMce20GBXcwI/sm7V5sM6uR2tRd+gyNbALZsN+fvgqwb7fAs3mNiIHCyTNo7BF5CjXiCcTZn8a2nZhQwDZ1u8UEdzs6owy1E8="
        #webhook
        - secure: "dXRAK6CQ1tTI/U5gA9t/ZBoUtJgufn5BGeUoBjH1nMrNML/mCGAZ39DfMUw3YDrjtp21cq0DnnTjeepOjp0cF1y87KYG9nqm363I21Mdvz/EgMz4t1ABfMFvVeozNF0JuPtoMbnM0dDLo6HmBs0nr/zBVLNdA1cVMCxzNEVOIjqv+4839kb1Tcw9LIeTADqoO2NYiXZ3G42NhWnoZXnUySUJDbya2O6VnDkRi4i1pgrNTNsfD3LRJ+TbBoR/zTCEAzaZgUviRTPJzNRoy4kpx4WvzVVkGWFbXn89z6ZZogjiA/bor6ltsto6Xww8n3TtRrBlFDvkvrDHWyEY5aQ0kLyDA2lJd+1/Cr7K6AqLKaHUj/gkA53JMRBJSPu3foTGuLKhoBXiGz1zWJfkhCSerhy7XVT5nmnhjXp+OYkNJuSpTucLc5jyyjdsEn1+nEkKwSEcF31iQ7SyDHXLrn+T6iIySyG+Gk2+ThoxoCyR3mq3kNqXc7kGECovVsdEZNRxF2zMSpunubIcht9DJsSxAOgotnex6AvDBJL5tlZqTso5p1cSjoZaB7a9//0KTOmMm8Y3fk+cYzn1MnRuoIzimOSNj+KVgU0KpNsl53jAKiAW/M0pTTI0p34X6luE7V41nznEbbZNjc4ak8l+0w72sF45aWJ82+IKUql02wIag20="
