# Metadata Curator Terraform terraform configration example.
# The terraform.tfvars file is the main configuration file for Terraform based deployment of Metadata Curator

# MongoDB username.  Mongo is used as storage for form.io (dataset metadata) information.
mongodb = {
    username = "appuser"
}

# Hostname/host is the url you want to use for Metadata Curator
hostname = "mc.example.demo"
host = "https://mc.example.demo"

# SSL cert file locations
sslCertificate = "/ssl/example.crt"
sslCertificateKey = "/ssl/example.key"

# Docker images Metadata Curator will use.  Owner is the location in dockerhub
images = {
    owner = "bcgovimages"
    forum_api = ":edge"
    formio = "h3brandon/formio:latest"
    frontend = ":edge"
    tusd = ":latest"
    minio = ":latest"
    frontend_bridge = ":edge"
}

# Open ID Connect configuration
oidc = {
    issuer = ""
    authorizationURL = "",
    tokenURL = "",
    userInfoURL = "",
    clientID = "",
    clientSecret = "",
    logoutURL = "",
}

# Public encryption key used to encrypt all data being uploaded via Metadata Curator.  A GPG key can be used.
base64EncodedPGPPublicKey = "LS0tLS1CRUdJTiBQR1AgUFVCTElDIEtFWSBCTE9DSy0tLS0tCgptUUlOQkY1aEpCSUJFQURXZ1ZUQmVXQWlKallkdTdlcVZhK1FXbXM0YmJmUUcwUjV5a0lpSVVXMGVNdTF5UXk0CnN6cit5ZTZpMkZ5RWZaUlFzbEJCeTBVWCtMK2picndBbXRrblJHWmw3RWE2UGZiREZGNk1HQm11TlhlQStvT1gKZkkxTlk3U0xxWDNGL2pLMnRIcU55QnZrU2tnYnRUcUZQYmVEZUFwa3M3cWI4WStmdUtkRGE5TGpoZEJiU1Fpago0T3JEOEk4RVVUaEZRVkF4Nldrdkl5aTVCQ2xtZVR5Y1F0YjBXKzdvTnVRbEtSMDNBYmNvNzF2VlBtMU9mM2hGClYyOUhmOWMyZndyS0F6ZGUvNTlhcE5RSHVaZ2wrYUo0TEQxamM1STQxc0NWQ1F0bzlrbXZIalB3ODZpT3Evc1oKMWVoZlNDVlpDTHNIcVVBOUcwVyswbUhTVmRIZHN0K01jK0pPRndEMHJ3Y2JMYnM1Q25oYkRKMHVpbUo2d3B2dApVU2hWUmNNb0VBSnNvRDczVlpRTGN0T2poRzhKZ2RZTkJMVVJMY0pNT094MVpqVi9hbEgxN3J1eWt4MlNCTXd0Cmh1QVZSQTBPMDg0dFJVd1ZBZ20yeDJ1TkxTWko3RlhzVzk5NEdCczF2OXpRNUhOclhNazB4WGxWU2ZhY3YrUmQKZnpoaFRiM3ZPQUpvQk1ITmNBNlRaWDVOTkJYbURmZCtkQUFVMm52RFJuLzN5SnViWG1yMmZDN1V1ODhoQ2l4Vwp5Sy9mazhvRk1md0pxODNxRy9VMVYrZGpjK1lkenJUK29IRFVzUWphSTBFc1h1alZIb1VWUW5EWG03WVR5a1IrCk53aGwvMUZZcDgzeklGRFpHZ0pTbTh1Q0psSERvTUVoOVd4aXluZkdwUER1SE5xQSsxTnNyMVFxWXdBUkFRQUIKdERSQ2NtRnVaRzl1SUZOb1lYSnlZWFIwSUR4aWNtRnVaRzl1UUdocFoyaDNZWGwwYUhKbFpYTnZiSFYwYVc5dQpjeTVqYjIwK2lRSk9CQk1CQ0FBNEZpRUUwQzlYZk9uanE2NnBSZGhJMkpZUnNBSHJjLzhGQWw1aEpCSUNHdzhGCkN3a0lCd0lHRlFvSkNBc0NCQllDQXdFQ0hnRUNGNEFBQ2drUTJKWVJzQUhyYy84bmRBLy9WcDJJT2lsLzB0RVYKQXV4VktIRzN6MEkwTlkxYkY1c056SHZxckt0dlRIa1h0SEY1YkFIcy9tY2dyWjdjeVVYSEtBLzE4QStrRUNKdApBS2VnazlzYXN2YThOT0lNWkVWWjZncXRxSkxVbkZzbW1ENVQvcjBWbk9Gb2pKMlU3UHJEUTBoSWd0ekJXMS9zCmYzb0NBTWxxWmg1Rm9DWlhKRWM0WXRKWXErYVdVVVZBaVpPMzVnN3NaVmN4MHpLNm04L2Zlanc5RmVad0tPL2MKL0pKNzBydkJCRUhMdVdpd251dzFzN3lMTFVxOTZPZllyN0NHaVZ4dWlPSUtpQS9rWE5XWDkyZE9jWHVUWFQ2dwpiWFRJVEgxRHAxNXgzS0pRQmpZMENaRERtRURwTjlZY0VDWWhGb2xScVFEbE5yeS9EVy8weWhUVWtoVHd0TnRpCk90SWZDVVJ5WTIvdStGZW1HYWFONGFCSUZsMVdzRU5nT0lkVnpjdko2Ulc2ZTRSSGRJRk53bDBQOVZZMzdlQzkKbE5vSWJkTmZ0UkxIY241OU51dXlSU0tVSEp4eSsyTWxWazMzdFRaWUdsekkyTFFoeDZVSlJ5UWIwZ0lUNHVQTApxSTRzSEFocGJwY3FidUVPOW42WEZLVnR5WDNHREpCWnU5ZnQ4SnowVEYxSmNEMFBVRXhva3NUQWNacnZuYXVZCjJ1SHZxLzNIZlhkemdVb1F2MDBSeDFPcjRubUJrRnpHb0EvWTYrbXpISE90T3ZLU3hxOU9yS2VmcWp4SEVOOUsKdXA5YWFGL0xFNHl3ZlE1Q1pKazdubmlQV1U1UHEyNngvYTFDbldUQzdwQkx3emVCdG1tVlI1OFR1d1ZRVEJUawpOZHVNTXNMM1AxSHNRcS9Gek8raElwVlBBTEd1MkZBPQo9VWRCZwotLS0tLUVORCBQR1AgUFVCTElDIEtFWSBCTE9DSy0tLS0tCg=="

# Metadata Curator supports different organizations.  Typically this is an LDAP attribute name.
orgAttribute = "businessCategory"

# the role needed to make an upload.  Typically this would be an LDAP group.
requiredRoleToCreateRequest = "exporter"

# when a new upload is made do you want to notify the metadata approvers (people who review the uploads)? 
alwaysNotifyListOnTopicCreate = "false"

# when a new comment is made on an upload do you want to notify the metadata approvers who haven't reviewed yet?
alwaysNotifyUninvolvedOnCommentAdd = "true"

# Metadata approver groups (typically LDAP groups) define who sees the approver interface vs the uploader interface (need at least 2 if spinning up keycloak)
approverGroups = ["metadata_approver_1_dip", "metadata_approver_2_dip"]

#Need at least 2 if spinning up keycloak otherwise unused adds these attribtues to exporters in keycloak setup should match the notify list if notifying
businessCategories = ["business_category_1", "business_category_2"]

# List of people who are always notified when uploads are created/edited 
# the person must be in a (typically LDAP) group that matches one of the elements in the object below e.g., "business_category_1" 
alwaysNotifyList = {
    "business_category_1": [
      {
        "name": "Metadata Approver_1_User_1",
        "email": "metadataapprover1user1@example.com"
      },
      {
        "name": "Metadata Approver_1_User_2",
        "email": "metadataapprover1@user2example.com"
      }
    ],
    "business_category_2": [
      {
        "name": "Metadata Approver_2_User_1",
        "email": "metadataapprover2@user1example.com"
      },
      {
        "name": "Metadata Approver_2_User_2",
        "email": "metadataapprover2@user2example.com"
      }
    ]
  }

# Email notification configuration
email = {
    "enabled": false,
    "service": "smtp.gmail.com",
    "secure": true,
    "port": 465,
    "user": "myusername",
    "pass": "mypassword",
    "from": "emailaddressthatnotificationscomefrom@example.com",
    "subject": "Data Upload Update"
  }

# group that Metadata Curator admins need to be in (typically an LDAP group)
adminGroup = "mc-admin"

# Form.io connection information.  Form.io has been integrated into Metadata Curator and is used for managing the dataset fields
formio = {
    "url": "http://localhost:3006",
    "username": "admin@example.com",
    "password": "CHANGEME"
}

# Postgres user to use.  Postgres is used for keycloak only so requires keycloak true
postgres = {
  username = "kcuser"
}

# oidc related which field should be considered the user id for mc
userIdField = "preferred_username"

# oidc related which field should be considered the email for mc
emailField = "email"

# oidc related which field should be considered the given name field (first) for mc
givenNameField = "given_name"

# oidc related which field should be considered the surname (last/family) name for mc
surnameField = "family_name"

# oidc related which field should be considered the groups for mc
groupField = "groups"

# When creating a upload/topic these groups should be ignored for group access (normally shared groups)
ignoreGroups = "researchers"

#Whether or not to install keycloak with this
makeKeycloak = true

# Keycloak username for admin.  Keycloak is an authentication/authorization application that can integrate with LDAP among other protocols.
keycloak = {
    username = "kcadmin"
}

#If setting up keycloak what url should it be hosted on
authHost = "https://auth.example.demo"
authHostName = "auth.example.demo"

#Is access group based or individual based
defaultAccessIsGroup = "true"
